# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Icm < Formula
  desc "Generate or validate intermodal container markings."
  homepage "https://github.com/meyermarcel/icm"
  version "1.2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/meyermarcel/icm/releases/download/1.2.0/icm_Darwin_x86_64.tar.gz"
      sha256 "81a9f0b385090b0453c5d5357605b3e2a50a0755510e555818ca8888b3a51ee2"

      def install
        bin.install "icm"
        # Install bash completion
        output = Utils.popen_read("#{bin}/icm misc bash-completion")
        (bash_completion/"icm").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/icm misc zsh-completion")
        (zsh_completion/"_icm").write output

        # man-pages is also defined in Makefile
        man1.install Dir["docs/man-pages/man1/*.1"]
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/meyermarcel/icm/releases/download/1.2.0/icm_Darwin_arm64.tar.gz"
      sha256 "8c4c02ecc229bafb5c59c27f8708140f28c5fc38038db026f75c0820e41ef8e6"

      def install
        bin.install "icm"
        # Install bash completion
        output = Utils.popen_read("#{bin}/icm misc bash-completion")
        (bash_completion/"icm").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/icm misc zsh-completion")
        (zsh_completion/"_icm").write output

        # man-pages is also defined in Makefile
        man1.install Dir["docs/man-pages/man1/*.1"]
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/meyermarcel/icm/releases/download/1.2.0/icm_Linux_x86_64.tar.gz"
      sha256 "60d38cac15d79ab03a3b6d9acfc5c87982fa602fb4429a3cdcb8fe573aa67c67"

      def install
        bin.install "icm"
        # Install bash completion
        output = Utils.popen_read("#{bin}/icm misc bash-completion")
        (bash_completion/"icm").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/icm misc zsh-completion")
        (zsh_completion/"_icm").write output

        # man-pages is also defined in Makefile
        man1.install Dir["docs/man-pages/man1/*.1"]
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/meyermarcel/icm/releases/download/1.2.0/icm_Linux_armv6.tar.gz"
      sha256 "0e3927a9f9615083cc5bc5fb090bbde18b17cce9578ebeab086ea5802b282bdc"

      def install
        bin.install "icm"
        # Install bash completion
        output = Utils.popen_read("#{bin}/icm misc bash-completion")
        (bash_completion/"icm").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/icm misc zsh-completion")
        (zsh_completion/"_icm").write output

        # man-pages is also defined in Makefile
        man1.install Dir["docs/man-pages/man1/*.1"]
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/meyermarcel/icm/releases/download/1.2.0/icm_Linux_arm64.tar.gz"
      sha256 "29c9b2d720c142250954399c13d1a45eec19cda234f277a8b11c28179a5ffe80"

      def install
        bin.install "icm"
        # Install bash completion
        output = Utils.popen_read("#{bin}/icm misc bash-completion")
        (bash_completion/"icm").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/icm misc zsh-completion")
        (zsh_completion/"_icm").write output

        # man-pages is also defined in Makefile
        man1.install Dir["docs/man-pages/man1/*.1"]
      end
    end
  end

  test do
    system "#{bin}/icm --version"
  end
end
